# Templates for ci jobs
include: ci_gitlab/gitlab-ci-siconos-templates.yml

 
# ---- Docker build jobs -----

# This job create a docker image with all required dependencies
# (including serialization, python wrapper, bullet but not OCE)
# It's based on ubuntu 18.04.
# It uses tag 'docker-build' to enforce run on a dedicated runner.
docker-build:ubuntu18.04:
  variables:
    IMAGE_NAME: ubuntu18.04
  stage: docker-build-layer2
  extends: .docker-build
  dependencies:
    - docker-build:ubuntu18.04-no-python


# This job create a docker image with all required dependencies
# (including serialization, python wrapper, bullet but not OCE)
# It's based on ubuntu 18.04.
docker-build:ubuntu18.04-oce:
  variables:
    IMAGE_NAME: ubuntu18.04-oce
  extends: .docker-build
  stage: docker-build-layer3
  dependencies:
    - docker-build:ubuntu18.04

# This job create a docker image with all required dependencies
# (including serialization, python wrapper, bullet but not OCE)
# It's based on debian stretch
docker-build:debian-stretch:
  variables:
    IMAGE_NAME: debian-stretch
  extends: .docker-build

# This job create a docker image with all required dependencies
# (including serialization, python wrapper, bullet but not OCE)
# It's based on debian buster
docker-build:debian-buster:
  variables:
    IMAGE_NAME: debian-buster
  extends: .docker-build

# This job create a docker image with all required dependencies
# (including serialization, python wrapper, bullet but not OCE)
# It's based on debian unstable
docker-build:debian-unstable:
  variables:
    IMAGE_NAME: debian-unstable
  extends: .docker-build

    
# This job create a docker image with all required dependencies
# (including serialization, python wrapper, mumps parallel)
# It's based on ubuntu 18.04.
docker-build:ubuntu18.04-mumps-par:
  variables:
    IMAGE_NAME: ubuntu18.04-mumps-par
  extends: .docker-build
  stage: docker-build-layer3 # layer 3 since it's based on docker-build:ubuntu18.04
  dependencies:
    - docker-build:ubuntu18.04

# This job create a docker image with all required dependencies
# (including serialization, bullet but not OCE)
# It's based on ubuntu 18.04.
docker-build:ubuntu18.04-no-python:
  variables:
    IMAGE_NAME: ubuntu18.04-no-python
  extends: .docker-build


# This job create a docker image with all required dependencies
# (including serialization, bullet but not OCE)
# It's based on ubuntu 18.04.
docker-build:ubuntu18.04-doc:
  variables:
    IMAGE_NAME: ubuntu18.04-doc
  extends: .docker-build
  stage: docker-build-layer-doc
  dependencies:
    - docker-build:ubuntu18.04-oce


# This job create a docker image with all required dependencies
# (including serialization, bullet but not OCE).
# It also download, build and install fclib/hdf5.
# It's based on ubuntu 18.04.
docker-build:ubuntu18.04-fclib:
  variables:
    IMAGE_NAME: ubuntu18.04-fclib
  extends: .docker-build
  stage: docker-build-layer3
  dependencies:
    - docker-build:ubuntu18.04

# This job create a docker image with all required dependencies
# (including serialization, python wrapper, bullet but not OCE)
# Based on opensuse/leap 15.0
docker-build:opensuse-leap-15.0:
  variables:
    IMAGE_NAME: opensuse-leap-15.0
  extends: .docker-build

# This job create a docker image with all required dependencies
# (including serialization, bullet, OCE, pythonocc).
# It's based on archlinux.
docker-build:archlinux-oce:
  variables:
    IMAGE_NAME: archlinux-oce
  extends: .docker-build

# Centos distrib
docker-build:centos-7:
  variables:
    IMAGE_NAME: centos-7
  extends: .docker-build


# ---- Siconos build jobs -----

# Siconos build and install, default config
# (based on cmake/default_siconos.cmake)
# on ubuntu 18.04.
install_siconos:ubuntu18.04:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/ubuntu18.04
    cdash_submit: 1
    user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_default.cmake
  extends: .siconos-build
  artifacts:
    paths:
      - build

install_siconos:ubuntu18.04-paranoidmode:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/ubuntu18.04
    cdash_submit: 1
    user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_paranoidmode.cmake
  extends: .siconos-build
  artifacts:
    paths:
      - build
  allow_failure: true
  when: manual
      

# Siconos build and install, without python wrappers
# (default conf, WITH_PYTHON_WRAPPER=OFF)
# on ubuntu 18.04.
install_siconos:ubuntu18.04-no-python:
  variables:
    IMAGE_NAME: $CI_REGISTRY_IMAGE/ubuntu18.04-no-python
    cdash_submit: 1
    user_file: $CI_PROJECT_DIR/$siconos_confs/siconos_no_python.cmake
  extends: .siconos-build



# --- Creates a new pipeline to build documentation
# Trigger : manual.
# When the job is activated (manual trigger through the web interface),
# it starts a new pipeline, i.e. includes jobs declared in docs/build-doc.yml
siconos:build-doc:
  stage: build
  trigger:
    include:
      - docs/build-doc.yml
  when: manual


